<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.GetDependencyListFromTree</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Transforms a dependency tree into a dependency list.</description>
        <name>GetDependencyListFromTree</name>
        <script><![CDATA[function GetDependencyListFromTree(dependencytree)
{
	if (IsObject(dependencytree) == false)
	{
		return false;
	}
	
	var aPackages = [];
		
	function ResolveDependencyTree(currentpackage)
	{
		var currentpackage = Clone(currentpackage);
		
		var aDependencies = GetArrayValue(GetValue(currentpackage,'_dependencies'));
		for (var nDependency = 0; nDependency < aDependencies.length; nDependency++)
		{
			ResolveDependencyTree(aDependencies[nDependency]);
		}
		currentpackage['_dependencies'] = null;
		var bExists = false;
		for (var nPackage = 0; nPackage < aPackages.length; nPackage++)
		{
			if (aPackages[nPackage]['dependency_status'] != 'circular')
			{
				if (aPackages[nPackage]['sys_id'] == currentpackage['sys_id'])
				{
					bExists = true;
					
					var strMinimalCommonVersion = GetMinimalCommonVersion(
						aPackages[nPackage]['compatible_versions'],
						currentpackage['compatible_versions']);
					
					if (strMinimalCommonVersion == false)
					{
						aPackages[nPackage]['compatible_versions'] = '';
						aPackages[nPackage]['dependency_status'] = 'conflicting_versions';
					}
					else
					{
						aPackages[nPackage]['compatible_versions'] = strMinimalCommonVersion;
						if (IsVersionCompatible(currentpackage['version'],strMinimalCommonVersion) == false)
						{
							aPackages[nPackage]['dependency_status'] = 'incompatible_version';
						}
					}
					
				}
			}
		}
		if (bExists == false)
		{
			aPackages.push(currentpackage)
		}
	}
	
	ResolveDependencyTree(dependencytree);
	
	return aPackages;	
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-09 16:37:44</sys_created_on>
        <sys_id>9929460e1b1b2510cd6153d16b4bcb5c</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>GetDependencyListFromTree</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_9929460e1b1b2510cd6153d16b4bcb5c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-09 16:46:50</sys_updated_on>
    </sys_script_include>
</record_update>
